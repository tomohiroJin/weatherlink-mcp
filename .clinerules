```clinerules
# Weatherlink‑MCP 用 cline ルール
# =================================
# FastAPI + mcp-python で実装する「天気 API MCP サーバー」プロジェクト向けの最小ガイドライン

## 1. 言語と記法
- コードは **Python 3.11 以上**、型注釈必須。
- 命名は **snake_case**（関数・変数）、**PascalCase**（クラス）。
- コメント・テスト名・ドキュメントは **日本語**。
- インデントは **スペース 4**。

## 2. ディレクトリ構成
```
app/          # FastAPI エンドポイント（I/F 層）
domain/       # ビジネスロジック・純粋関数
tests/        # pytest
```

## 3. 開発フロー
1. **RED → GREEN → REFACTOR** の TDD を徹底。  
2. E2E を薄く通す “Tracer Bullet” で小さく迭代。  
3. 変更単位ごとに **Conventional Commits** でコミット。  
4. `main` へ PR、CI (`pytest` + `ruff` + `mypy`) をパスしてマージ。

## 4. 実装指針
- **DbC**: docstring に `Pre:` / `Post:` を書き、`assert` で検証。
- 副作用関数は `_io` 接尾辞で明示し、テストでスタブ化しやすく。
- 関数は **20 行以内・分岐深さ ≤ 2・複雑度 ≤ 7**。
- 外部入力（クエリ・環境変数）は **pydantic** で検証。
- 重複コードを見つけたら即リファクタ。**DRY** を厳守。

## 5. テスト規約
- 各ユースケースに 1 テスト。**振る舞いベース**で名前を付ける。
- 外部 API は `httpx_mock` でモック、タイムアウトを 1s 以内に。
- テストデータは `tests/fixtures/` に YAML で管理。
- テストスメル（Assertion Roulette 等）が出たら即リファクタ。

## 6. ドキュメント
- 変更があれば **README 更新**必須（機能概要・起動方法・環境変数）。
- API 仕様は `docs/openapi.yaml` に自動エクスポートしコミット。

## 7. セキュリティ & 禁止事項
- `.env*` に機密情報を置き、**ハードコード禁止**。
- `print` デバッグ・コメントアウト残し・未使用インポートを残さない。
- `main` に直接 push しない。必ずブランチ → PR → Review。

# ‼️ このファイルの変更は PR 承認を経てから適用すること
```